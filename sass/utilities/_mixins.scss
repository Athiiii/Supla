@mixin buttonOutline($color, $transitionColor) {
  background-color: transparent;
  color: $color;

  @include createDefaultBorder($color);
  @include buttonActions($color, $transitionColor);

  //include animations
  @include swipeLeftToRightAnim($color, $transitionColor);
  @include swipeDiagonal($color, $transitionColor);
  @include swipeCircle($color, $transitionColor);
  @include swipecenterHorizontal($color, $transitionColor);
  @include swipeCenterVertical($color, $transitionColor);
  @include swipeTopBottom($color, $transitionColor);

  &:hover:not(.disabled):not([class*="a-btn"]) {
    background-color: $color;
    color: $transitionColor;
  }
}

@mixin buttonActions($color, $background) {
  & {
    transition: background-color 0.4s, box-shadow 0.4s, color 0.4s;
  }

  &:hover:not(.disabled):not([class*="a-btn"]) {
    @if $background == $color-black {
      background-color: $color-grey-lighter;
    } @else {
      background-color: lighten($color, 8%);
    }
  }

  &:focus:not(.disabled),
  &:active:not(.disabled) {
    $box-shadow: 0 0 0 0.05rem;
    @if $background == $color-black {
      box-shadow: $box-shadow rgba($color-grey-lighter, 5%);
    } @else {
      box-shadow: $box-shadow rgba($color, 5%);
    }
  }
}

@mixin createDefaultBorder($color: "") {
  @if ($color == "") {
    border: $default-border currentColor;
  } @else if $color != $color-white {
    border: $default-border $color;
  }
}

@mixin absolute-zero {
  @include absolute($top: 0, $bottom: 0, $left: 0, $right: 0);
}

@mixin changeTextColorOnHoverOrFocus($color) {
  &:hover,
  &:focus {
    color: $color;
  }
}

@mixin absolute($top: "", $bottom: "", $left: "", $right: "") {
  position: absolute;

  @if ($top != "") {
    top: $top;
  }
  @if ($bottom != "") {
    bottom: $bottom;
  }
  @if ($left != "") {
    left: $left;
  }
  @if ($right != "") {
    right: $right;
  }
}
